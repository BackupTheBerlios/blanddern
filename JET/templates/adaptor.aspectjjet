<%@ jet package="translated" imports="filtering.* adaptor.* launcher.* org.eclipse.emf.ecore.* java.util.*" class="AdaptorGeneration"%>
<% ArgumentsList args = (ArgumentsList) argument; %>
<% String className = args.getEClass(); %>
<% String ePackageName = args.getEPackage(); %>

<% int numMethod = 0; %>

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

/**
 * 
 * @author Jeremie SCHEER & Loic SUTTER
 *
 */

privileged aspect <%=className%>Aspect {
<% for(int i=0; i<args.getModel().getMatching().size(); i++){ %>
	<% boolean alreadyVisited = false; %>
	
	<% for(int j=0; j<args.getModel().getMatching().get(i).getRhs().size(); j++){ %>
		<% for(int k=0; k<args.getModel().getMatching().get(i).getRhs().get(j).getComposed().size(); k++){ %>
		
			<% boolean isFirstSuperClass = false; %>
			<% boolean hasSuperClass = false; %>
			<% List superClass = args.getModel().getMatching().get(i).getRhs().get(j).getComposed().get(k).getConcept().getEAllSuperTypes(); %>
			<% Iterator it = superClass.iterator(); %>
			<% boolean isSuperClass = false; %>
			<% while(it.hasNext() && !isSuperClass){ %>
				<% hasSuperClass = true; %>
				<% EClass cl = (EClass)it.next(); %>
				
				<% if(cl.getName().equalsIgnoreCase(className)){ %>
					<% isSuperClass = true; %>
					<% if(cl.getEAllSuperTypes().size()==0){ %>
						<% isFirstSuperClass = true; %>
					<% } %>
				<% } %>
			<% } %>
		
			<% if(args.getModel().getMatching().get(i).getRhs().get(j).getComposed().get(k).getConcept().getName().equalsIgnoreCase(className) || isSuperClass){ %>
				
				<% if(!alreadyVisited){ %>
					<% if(!hasSuperClass || isFirstSuperClass){ %>
						<% for(int z=0; z<args.getModel().getMatching().get(i).getLhs().getComposed().size(); z++){ %>
							<% Instance proxy = args.getModel().getMatching().get(i).getLhs().getComposed().get(z); %>
							
							<% if(proxy.isIsMain()){ %>
								public <%=proxy.getConcept().getEPackage().getName()%>.<%=proxy.getConcept().getName()%> <%=ePackageName%>.<%=proxy.getName()%>;
								
								public void <%=ePackageName%>.throwNotification(Notification msg){
									if (eNotificationRequired())
										eNotify(new ENotificationImpl(this, msg.getEventType(), 0, msg.getOldValue(), msg.getNewValue()));
								}
							<% } %>
						<% } %>
					<% } %>	
					
					<% for(int l=0;l<args.getModel().getMatching().get(i).getCorrespondanceRule().size();l++){ %>
						<% String methodeName = args.getModel().getMatching().get(i).getCorrespondanceRule().get(l).getFeature().getName(); %>
						<% CorrespondanceRule correspondanceRule = args.getModel().getMatching().get(i).getCorrespondanceRule().get(l); %>
						
						<% boolean setAble = true; %>
						<% if(correspondanceRule.getFeature().getEContainingClass().getName().equalsIgnoreCase(className)){ %>	
							<% String type = ""; %>			
							<% if(correspondanceRule.getFeature() instanceof EReference){ %>
								<% if(correspondanceRule.getFeature().getUpperBound()==1){ %>
									<% type = correspondanceRule.getFeature().getEType().getEPackage().getName()+"."+correspondanceRule.getFeature().getEType().getName(); %>
									<% setAble = true; %>
								<% }else{ %>
									<% type = "EList"; %>
									<% setAble = false; %>
								<% } %>
							<% }else{ %>
								<% type = correspondanceRule.getFeature().getEType().getInstanceTypeName(); %>
								<% setAble = true; %>
							<% } %>
						
							pointcut getter<%=numMethod%>(<%=ePackageName%> self) : target(self) && execution(<%=type%> <%= ePackageName %>.get<%=methodeName.replaceFirst(".",(methodeName.charAt(0)+"").toUpperCase()) %>());
							<% if(correspondanceRule.getProperty().getSetPart() != null && setAble) { %>
							pointcut setter<%=numMethod%>(<%=ePackageName%> self, <%=type%> newValue) : target(self) && execution(void <%= ePackageName %>.set<%=methodeName.replaceFirst(".",(methodeName.charAt(0)+"").toUpperCase())%>(*)) && args(newValue);
							<% } %>
							
							<%=type%> around (<%=ePackageName%> self) : getter<%=numMethod%>(self){
								<%=correspondanceRule.getProperty().getGetPart().getRequest().getExpression()%>
							}
							
							<% if(correspondanceRule.getProperty().getSetPart() != null && setAble) { %>
							void around(<%=ePackageName%> self, <%=type%> newValue) : setter<%=numMethod%>(self, newValue){
								<%=correspondanceRule.getProperty().getSetPart().getRequest().getExpression()%>
							}
							<% } %>
							
							<% numMethod++; %>
						<% } %>		
					<% } %>
					<% alreadyVisited = true; %>
				<% } %>
			<% } %>
		<% } %>
	<% } %>
<% } %>	
}


