<%@ jet package="translated" imports="launcher.* adaptor.* filtering.*" class="RunQueryGeneration" %>
<%ArgumentsRunQuery args = (ArgumentsRunQuery) argument; %>
<% Adaptor adapt = args.getModel(); %>
<% String packFactoryName = args.getFactoryPath();%>
<% String implPath = args.getImplPath();%>

package filtering;

import org.eclipse.emf.ecore.EObject;
import java.util.*;
import java.io.*;
import patternsEngine.*;

class RunQuery {

private ItfPatternEngine pe;

public RunQuery(ItfPatternEngine pe){
 this.pe = pe;
}

<% for(int i=0;i<adapt.getMatching().size();i++) { %>
	public EObject [] runPattern<%=i+1%>(EObject eo) {
	String prologFileName = "rp<%=i+1%>.pl";
	File prologFile = new File(prologFileName);
	Map prologResult = pe.executesProlog(prologFile);
	<%Matching currentMatching = adapt.getMatching().get(i);%>
	<%LhsPattern lhsPattern = currentMatching.getLhs();%>
	boolean isLhsPattern = false;
	EObject [] res = null;
	List indices = new ArrayList();
	<%for(int j=0;j<lhsPattern.getComposed().size();j++) { %>
	<% String currentInstanceName = lhsPattern.getComposed().get(j).getName();%>
		if(eo.getClass().getName().equals("<%=currentInstanceName%>")) {
			isLhsPattern = true;
			indices.add("<%=currentInstanceName%>");
		}
	<% } %>
	
	if(isLhsPattern==true) {
		int index = 0;
		<% String objectName = "";%>
		<% int indiceObject = 1;%>
		<%for(int k=0;k<lhsPattern.getComposed().size();k++) { %>
	<% String currentInstanceName = lhsPattern.getComposed().get(k).getName();%>	
		if(eo.getClass().getName().equals("<%=currentInstanceName%>")) {
			<%=packFactoryName%> objectInstanced = <%=packFactoryName%>.eINSTANCE;
			<% boolean oneRhsIsInstanciate = false; %>
			<% int indice = 0; %>
			<%while(oneRhsIsInstanciate==false && indice<currentMatching.getRhs().size()){%>
				<%RhsPattern rhsPattern = currentMatching.getRhs().get(indice);%>
				<%if(rhsPattern.getQuery() != null){%>
					<%if(rhsPattern.getQuery().getRequest() != null) { %>
						<% String rhsCondition = rhsPattern.getQuery().getRequest().toString(); %>
						if(Boolean.parseBoolean(<%=rhsCondition%>)==true){
							<% LhsPattern lhs = currentMatching.getLhs();%>
							<% for(int u=0;u<currentMatching.getLhs().getComposed().size();u++) { %>
								<% Instance instanceLhs = lhs.getComposed().get(u);%>
								<% RhsPattern rhs = currentMatching.getRhs().get(0);%>
								<% Instance instanceRhs = rhs.getComposed().get(0);%>
								<% String createMethodName = "create"+instanceRhs.getConcept().getName()+"()";%>
								<% objectName = "o"+indiceObject;%>
								<% indiceObject++;%>
								<% String castPrologResult = "("+instanceLhs.getConcept().getEPackage().getName()+"."+instanceLhs.getConcept().getName()+")";%>
								<% String objectType = implPath+"."+instanceRhs.getConcept().getName()+"Impl";%>
								<% String castObjectCreate = "("+objectType+")";%>
								<%=objectType%> <%=objectName%> = <%=castObjectCreate%>objectInstanced.<%=createMethodName%>;
								<%=objectName%>.<%=instanceLhs.getName()%> = <%=castPrologResult%>prologResult.get("<%=instanceLhs.getName()%>");
								res[index] = <%=objectName%>;
								index++;
							<% } %>
							<%oneRhsIsInstanciate = true;%>
						}
					<% } %>
				<% } %>
				<% indice++; %>
			<% } %>
			
			<% if(oneRhsIsInstanciate==false) { %>
				<% LhsPattern lhs = currentMatching.getLhs();%>
				<% for(int u=0;u<currentMatching.getLhs().getComposed().size();u++) { %>
					<% Instance instanceLhs = lhs.getComposed().get(u);%>
					<% RhsPattern rhs = currentMatching.getRhs().get(0);%>
					<% Instance instanceRhs = rhs.getComposed().get(0);%>
					<% String createMethodName = "create"+instanceRhs.getConcept().getName()+"()";%>
					<% objectName = "o"+indiceObject;%>
					<% indiceObject++;%>
					<% String castPrologResult = "("+instanceLhs.getConcept().getEPackage().getName()+"."+instanceLhs.getConcept().getName()+")";%>
					<% String objectType = implPath+"."+instanceRhs.getConcept().getName()+"Impl";%>
					<% String castObjectCreate = "("+objectType+")";%>
					<%=objectType%> <%=objectName%> = <%=castObjectCreate%>objectInstanced.<%=createMethodName%>;
					<%=objectName%>.<%=instanceLhs.getName()%> = <%=castPrologResult%>prologResult.get("<%=instanceLhs.getName()%>");
					res[index] = <%=objectName%>;
					index++;
				<% } %>
				
			<% } %>
		}
	<% } %>	
		return res;
	}else{
		return null;
	}
	}
<% } %>

}